{"ast":null,"code":"var _jsxFileName = \"F:\\\\React\\\\Homeworks\\\\imdb\\\\src\\\\components\\\\movies.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport Table from \"./common/table.component\";\nimport Rating from \"./rating.component\";\nimport getMovies from \"../service/get-movies.service\";\nimport getGenres from \"../service/get-genres.service\";\nimport Pagination from \"./common/pagination.component\";\nimport Filter from \"./common/filtering.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Movies = props => {\n  _s();\n\n  const [states, setStates] = useState({\n    movies: [],\n    sortColumn: {\n      path: \"id\",\n      order: \"asc\"\n    },\n    activePage: 1,\n    pageCount: 5,\n    genres: [],\n    selectedGenre: \"All Genres\"\n  });\n\n  function setMoviesAndGenres() {\n    const movies = getMovies();\n    const genres = [\"All Genres\", ...getGenres()];\n    setStates(prev => ({ ...prev,\n      movies,\n      genres\n    }));\n  }\n\n  useEffect(setMoviesAndGenres, []);\n\n  function changeState(fieldName, updatedState) {\n    setStates(prev => ({ ...prev,\n      [fieldName]: updatedState\n    }));\n  }\n\n  function handleToggleRating(movieRank) {\n    const movies = [...states.movies];\n    const movie = movies.find(movie => movie.id === movieRank);\n    movie.your_rating = !movie.your_rating;\n    changeState('movies', movies);\n  }\n\n  function handleSort(sortColumn) {\n    changeState('sortColumn', sortColumn);\n  }\n\n  function handleClickPage(activePage) {\n    changeState('activePage', activePage);\n  }\n\n  function handleClickFilter(selectedGenre) {\n    changeState('selectedGenre', selectedGenre);\n  }\n\n  function paginateMovies(movies) {\n    const {\n      activePage,\n      pageCount\n    } = states;\n    const start = (activePage - 1) * pageCount;\n    const paginatedMovies = movies.slice(start, start + pageCount);\n    return paginatedMovies;\n  }\n\n  function filterMovies() {\n    const {\n      movies,\n      selectedGenre\n    } = states;\n    const filteredMovies = movies.filter(movie => {\n      if (selectedGenre === \"All Genres\") return true;\n      if (movie.genres.includes(selectedGenre)) return true;\n      return false;\n    });\n    return filteredMovies;\n  }\n\n  function sortMovies(movies) {\n    const {\n      sortColumn\n    } = states;\n\n    const sortedMovies = _.orderBy(movies, [sortColumn.path], [sortColumn.order]);\n\n    return sortedMovies;\n  }\n\n  const filteredMovies = filterMovies();\n  const paginatedMovies = paginateMovies(filteredMovies);\n  const movies = sortMovies(paginatedMovies);\n  const columns = [{\n    label: \"Rank\",\n    path: \"id\",\n    sorting: true,\n    content: (movie, key) => /*#__PURE__*/_jsxDEV(\"td\", {\n      children: movie[key]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 38\n    }, this)\n  }, {\n    label: \"Title\",\n    path: \"title\",\n    sorting: true,\n    content: (movie, key) => /*#__PURE__*/_jsxDEV(\"td\", {\n      children: movie[key]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 38\n    }, this)\n  }, {\n    label: \"Poster\",\n    path: \"posterUrl\",\n    content: (movie, key) => /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie[key],\n        style: {\n          height: \"100px\",\n          width: \"auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this)\n  }, {\n    label: \"Your Rating\",\n    path: \"your_rating\",\n    content: (movie, key) => /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(Rating, {\n        isRated: movie[key],\n        rank: movie.id,\n        handleToggleRating: handleToggleRating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }, this)\n  }, {\n    label: \"Action\",\n    path: \"action\",\n    content: (movie, key) => /*#__PURE__*/_jsxDEV(\"td\", {\n      children: movie[key]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 38\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Filter, {\n          items: states.genres,\n          selectedGenre: states.selectedGenre,\n          onClickFilter: handleClickFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-8\",\n          children: [/*#__PURE__*/_jsxDEV(Table, {\n            items: movies,\n            columns: columns,\n            onSort: handleSort,\n            sortColumn: states.sortColumn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            totalItems: filteredMovies.length,\n            pageCount: states.pageCount,\n            activePage: states.activePage,\n            onClickPage: handleClickPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Movies, \"Fb4kyEg2/hPVOsNcx0+M7N74DE0=\");\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["F:/React/Homeworks/imdb/src/components/movies.component.js"],"names":["React","useEffect","useState","_","Table","Rating","getMovies","getGenres","Pagination","Filter","Movies","props","states","setStates","movies","sortColumn","path","order","activePage","pageCount","genres","selectedGenre","setMoviesAndGenres","prev","changeState","fieldName","updatedState","handleToggleRating","movieRank","movie","find","id","your_rating","handleSort","handleClickPage","handleClickFilter","paginateMovies","start","paginatedMovies","slice","filterMovies","filteredMovies","filter","includes","sortMovies","sortedMovies","orderBy","columns","label","sorting","content","key","height","width","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport Table from \"./common/table.component\";\r\nimport Rating from \"./rating.component\";\r\nimport getMovies from \"../service/get-movies.service\";\r\nimport getGenres from \"../service/get-genres.service\";\r\nimport Pagination from \"./common/pagination.component\";\r\nimport Filter from \"./common/filtering.component\";\r\n\r\nconst Movies = (props) => {\r\n    const [states, setStates] = useState( {\r\n        movies: [],\r\n        sortColumn: { path: \"id\", order: \"asc\" },\r\n        activePage: 1,\r\n        pageCount: 5,\r\n        genres: [],\r\n        selectedGenre: \"All Genres\",\r\n    } );\r\n\r\n    function setMoviesAndGenres() {\r\n        const movies = getMovies();\r\n        const genres = [\"All Genres\", ...getGenres()];\r\n        setStates((prev) => ({ ...prev, movies, genres }));\r\n    }\r\n\r\n    useEffect(setMoviesAndGenres, []);\r\n\r\n    function changeState(fieldName, updatedState) {\r\n        setStates((prev) => ({ ...prev, [fieldName]: updatedState }));\r\n    }\r\n\r\n    function handleToggleRating(movieRank) {\r\n        const movies = [...states.movies];\r\n        const movie = movies.find((movie) => movie.id === movieRank);\r\n        movie.your_rating = !movie.your_rating;\r\n        changeState('movies', movies);\r\n    }\r\n\r\n    function handleSort(sortColumn) {\r\n        changeState('sortColumn', sortColumn);\r\n    }\r\n\r\n    function handleClickPage(activePage) {\r\n        changeState('activePage', activePage);\r\n    }\r\n\r\n    function handleClickFilter(selectedGenre) {\r\n        changeState('selectedGenre', selectedGenre);\r\n    }\r\n\r\n    function paginateMovies(movies) {\r\n        const { activePage, pageCount } = states;\r\n        const start = (activePage - 1) * pageCount;\r\n        const paginatedMovies = movies.slice(start, start + pageCount);\r\n        return paginatedMovies;\r\n    }\r\n\r\n    function filterMovies() {\r\n        const { movies, selectedGenre } = states;\r\n        const filteredMovies = movies.filter((movie) => {\r\n            if (selectedGenre === \"All Genres\") return true;\r\n\r\n            if (movie.genres.includes(selectedGenre)) return true;\r\n            return false;\r\n        });\r\n        return filteredMovies;\r\n    }\r\n\r\n    function sortMovies(movies) {\r\n        const { sortColumn } = states;\r\n        const sortedMovies = _.orderBy(\r\n            movies,\r\n            [sortColumn.path],\r\n            [sortColumn.order]\r\n        );\r\n        return sortedMovies;\r\n    }\r\n\r\n    const filteredMovies = filterMovies();\r\n    const paginatedMovies = paginateMovies(filteredMovies);\r\n    const movies = sortMovies(paginatedMovies);\r\n\r\n    const columns = [\r\n        {\r\n            label: \"Rank\",\r\n            path: \"id\",\r\n            sorting: true,\r\n            content: (movie, key) => <td>{movie[key]}</td>,\r\n        },\r\n        {\r\n            label: \"Title\",\r\n            path: \"title\",\r\n            sorting: true,\r\n            content: (movie, key) => <td>{movie[key]}</td>,\r\n        },\r\n        {\r\n            label: \"Poster\",\r\n            path: \"posterUrl\",\r\n            content: (movie, key) => (\r\n                <td>\r\n                    <img\r\n                        src={movie[key]}\r\n                        style={{ height: \"100px\", width: \"auto\" }}\r\n                    />\r\n                </td>\r\n            ),\r\n        },\r\n        {\r\n            label: \"Your Rating\",\r\n            path: \"your_rating\",\r\n            content: (movie, key) => (\r\n                <td>\r\n                    <Rating\r\n                        isRated={movie[key]}\r\n                        rank={movie.id}\r\n                        handleToggleRating={handleToggleRating}\r\n                    />\r\n                </td>\r\n            ),\r\n        },\r\n        {\r\n            label: \"Action\",\r\n            path: \"action\",\r\n            content: (movie, key) => <td>{movie[key]}</td>,\r\n        },\r\n    ];\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Filter\r\n                        items={states.genres}\r\n                        selectedGenre={states.selectedGenre}\r\n                        onClickFilter={handleClickFilter}\r\n                    />\r\n                    <div className=\"col-lg-8\">\r\n                        <Table\r\n                            items={movies}\r\n                            columns={columns}\r\n                            onSort={handleSort}\r\n                            sortColumn={states.sortColumn}\r\n                        />\r\n                        <Pagination\r\n                            totalItems={filteredMovies.length}\r\n                            pageCount={states.pageCount}\r\n                            activePage={states.activePage}\r\n                            onClickPage={handleClickPage}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Movies;\r\n"]},"metadata":{},"sourceType":"module"}