{"ast":null,"code":"var _jsxFileName = \"F:\\\\React\\\\Homeworks\\\\imdb\\\\src\\\\components\\\\movies.component.js\";\nimport React, { Component } from \"react\";\nimport Table from \"./common/table.component\";\nimport Rating from \"./rating.component\";\nimport getMovies from \"../service/get-movies.service\";\nimport getGenres from \"../service/get-genres.service\";\nimport _ from \"lodash\";\nimport Pagination from \"./common/pagination.component\";\nimport Filter from \"./common/filtering.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Movies extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      movies: [],\n      sortColumn: {\n        path: \"id\",\n        order: \"asc\"\n      },\n      activePage: 1,\n      pageCount: 5,\n      genres: [],\n      selectedGenre: \"All Genres\"\n    };\n\n    this.handleToggleRating = movieRank => {\n      const movies = [...this.state.movies];\n      const movie = movies.find(movie => movie.id === movieRank);\n      movie.your_rating = !movie.your_rating;\n      this.setState({ ...this.state,\n        movies\n      });\n    };\n\n    this.handleSort = sortColumn => {\n      this.setState({ ...this.state,\n        sortColumn\n      });\n    };\n\n    this.handleClickPage = activePage => {\n      this.setState({ ...this.state,\n        activePage\n      });\n    };\n\n    this.handleClickFilter = selectedGenre => {\n      this.setState({ ...this.state,\n        selectedGenre\n      });\n    };\n\n    this.paginateMovies = movies => {\n      const {\n        activePage,\n        pageCount\n      } = this.state;\n      const start = (activePage - 1) * pageCount;\n      const paginatedMovies = movies.slice(start, start + pageCount);\n      return paginatedMovies;\n    };\n\n    this.filterMovies = () => {\n      const {\n        movies,\n        selectedGenre\n      } = this.state;\n      const filteredMovies = movies.filter(movie => {\n        if (selectedGenre === \"All Genres\") return true;\n        if (movie.genres.includes(selectedGenre)) return true;\n        return false;\n      });\n      return filteredMovies;\n    };\n\n    this.sortMovies = movies => {\n      const {\n        sortColumn\n      } = this.state;\n\n      const sortedMovies = _.orderBy(movies, [sortColumn.path], [sortColumn.order]);\n\n      return sortedMovies;\n    };\n  }\n\n  componentDidMount() {\n    const movies = getMovies();\n    const genres = [\"All Genres\", ...getGenres()];\n    this.setState({ ...this.state,\n      movies,\n      genres\n    });\n  }\n\n  render() {\n    const filteredMovies = this.filterMovies();\n    const paginatedMovies = this.paginateMovies(filteredMovies);\n    const movies = this.sortMovies(paginatedMovies);\n    const columns = [{\n      label: \"Rank\",\n      path: \"id\",\n      sorting: true,\n      content: (movie, key) => /*#__PURE__*/_jsxDEV(\"td\", {\n        children: movie[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 42\n      }, this)\n    }, {\n      label: \"Title\",\n      path: \"title\",\n      sorting: true,\n      content: (movie, key) => /*#__PURE__*/_jsxDEV(\"td\", {\n        children: movie[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 42\n      }, this)\n    }, {\n      label: \"Poster\",\n      path: \"posterUrl\",\n      content: (movie, key) => /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie[key],\n          style: {\n            height: \"100px\",\n            width: \"auto\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this)\n    }, {\n      label: \"Your Rating\",\n      path: \"your_rating\",\n      content: (movie, key) => /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(Rating, {\n          isRated: movie[key],\n          rank: movie.id,\n          handleToggleRating: this.handleToggleRating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this)\n    }, {\n      label: \"Action\",\n      path: \"action\",\n      content: (movie, key) => /*#__PURE__*/_jsxDEV(\"td\", {\n        children: movie[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 42\n      }, this)\n    }];\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(Filter, {\n            items: this.state.genres,\n            selectedGenre: this.state.selectedGenre,\n            onClickFilter: this.handleClickFilter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-8\",\n            children: [/*#__PURE__*/_jsxDEV(Table, {\n              items: movies,\n              columns: columns,\n              onSort: this.handleSort,\n              sortColumn: this.state.sortColumn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n              totalItems: filteredMovies.length,\n              pageCount: this.state.pageCount,\n              activePage: this.state.activePage,\n              onClickPage: this.handleClickPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["F:/React/Homeworks/imdb/src/components/movies.component.js"],"names":["React","Component","Table","Rating","getMovies","getGenres","_","Pagination","Filter","Movies","state","movies","sortColumn","path","order","activePage","pageCount","genres","selectedGenre","handleToggleRating","movieRank","movie","find","id","your_rating","setState","handleSort","handleClickPage","handleClickFilter","paginateMovies","start","paginatedMovies","slice","filterMovies","filteredMovies","filter","includes","sortMovies","sortedMovies","orderBy","componentDidMount","render","columns","label","sorting","content","key","height","width","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Table from \"./common/table.component\";\r\nimport Rating from \"./rating.component\";\r\nimport getMovies from \"../service/get-movies.service\";\r\nimport getGenres from \"../service/get-genres.service\";\r\nimport _ from \"lodash\";\r\nimport Pagination from \"./common/pagination.component\";\r\nimport Filter from \"./common/filtering.component\";\r\n\r\nclass Movies extends React.Component {\r\n    state = {\r\n        movies: [],\r\n        sortColumn: { path: \"id\", order: \"asc\" },\r\n        activePage: 1,\r\n        pageCount: 5,\r\n        genres: [],\r\n        selectedGenre: \"All Genres\",\r\n    };\r\n\r\n    componentDidMount() {\r\n        const movies = getMovies();\r\n        const genres = [\"All Genres\", ...getGenres()];\r\n        this.setState({ ...this.state, movies, genres });\r\n    }\r\n\r\n    handleToggleRating = (movieRank) => {\r\n        const movies = [...this.state.movies];\r\n        const movie = movies.find((movie) => movie.id === movieRank);\r\n        movie.your_rating = !movie.your_rating;\r\n        this.setState({ ...this.state, movies });\r\n    };\r\n\r\n    handleSort = (sortColumn) => {\r\n        this.setState({ ...this.state, sortColumn });\r\n    };\r\n\r\n    handleClickPage = (activePage) => {\r\n        this.setState({ ...this.state, activePage });\r\n    };\r\n\r\n    handleClickFilter = (selectedGenre) => {\r\n        this.setState({ ...this.state, selectedGenre });\r\n    };\r\n\r\n    paginateMovies = (movies) => {\r\n        const { activePage, pageCount } = this.state;\r\n        const start = (activePage - 1) * pageCount;\r\n        const paginatedMovies = movies.slice(start, start + pageCount);\r\n        return paginatedMovies;\r\n    };\r\n\r\n    filterMovies = () => {\r\n        const { movies, selectedGenre } = this.state;\r\n        const filteredMovies = movies.filter((movie) => {\r\n            if (selectedGenre === \"All Genres\") return true;\r\n\r\n            if (movie.genres.includes(selectedGenre)) return true;\r\n            return false;\r\n        });\r\n        return filteredMovies;\r\n    };\r\n\r\n    sortMovies = (movies) => {\r\n        const { sortColumn } = this.state;\r\n        const sortedMovies = _.orderBy(\r\n            movies,\r\n            [sortColumn.path],\r\n            [sortColumn.order]\r\n        );\r\n        return sortedMovies;\r\n    };\r\n\r\n    render() {\r\n        const filteredMovies = this.filterMovies();\r\n        const paginatedMovies = this.paginateMovies(filteredMovies);\r\n        const movies = this.sortMovies(paginatedMovies);\r\n        const columns = [\r\n            {\r\n                label: \"Rank\",\r\n                path: \"id\",\r\n                sorting: true,\r\n                content: (movie, key) => <td>{movie[key]}</td>,\r\n            },\r\n            {\r\n                label: \"Title\",\r\n                path: \"title\",\r\n                sorting: true,\r\n                content: (movie, key) => <td>{movie[key]}</td>,\r\n            },\r\n            {\r\n                label: \"Poster\",\r\n                path: \"posterUrl\",\r\n                content: (movie, key) => (\r\n                    <td>\r\n                        <img\r\n                            src={movie[key]}\r\n                            style={{ height: \"100px\", width: \"auto\" }}\r\n                        />\r\n                    </td>\r\n                ),\r\n            },\r\n            {\r\n                label: \"Your Rating\",\r\n                path: \"your_rating\",\r\n                content: (movie, key) => (\r\n                    <td>\r\n                        <Rating\r\n                            isRated={movie[key]}\r\n                            rank={movie.id}\r\n                            handleToggleRating={this.handleToggleRating}\r\n                        />\r\n                    </td>\r\n                ),\r\n            },\r\n            {\r\n                label: \"Action\",\r\n                path: \"action\",\r\n                content: (movie, key) => <td>{movie[key]}</td>,\r\n            },\r\n        ];\r\n        return (\r\n            <>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Filter\r\n                            items={this.state.genres}\r\n                            selectedGenre={this.state.selectedGenre}\r\n                            onClickFilter={this.handleClickFilter}\r\n                        />\r\n                        <div className=\"col-lg-8\">\r\n                            <Table\r\n                                items={movies}\r\n                                columns={columns}\r\n                                onSort={this.handleSort}\r\n                                sortColumn={this.state.sortColumn}\r\n                            />\r\n                            <Pagination\r\n                                totalItems={filteredMovies.length}\r\n                                pageCount={this.state.pageCount}\r\n                                activePage={this.state.activePage}\r\n                                onClickPage={this.handleClickPage}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Movies;\r\n"]},"metadata":{},"sourceType":"module"}