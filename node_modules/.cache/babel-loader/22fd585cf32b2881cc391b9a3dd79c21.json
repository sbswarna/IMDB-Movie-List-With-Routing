{"ast":null,"code":"var _jsxFileName = \"F:\\\\React\\\\class-16\\\\imdb\\\\src\\\\components\\\\movies.component.js\";\nimport React, { Component } from \"react\";\nimport Table from \"./common/table.component\";\nimport Rating from \"./rating.component\";\nimport getMovies from \"../service/get-movies.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Movies extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      movies: [{\n        rank: 1,\n        title: 'The Shawshank Redemption',\n        imdb_rating: '9.2',\n        your_rating: true,\n        action: ''\n      }, {\n        rank: 2,\n        title: 'The Godfather',\n        imdb_rating: '9.1',\n        your_rating: false,\n        action: ''\n      }, {\n        rank: 3,\n        title: 'The Godfather: Part II',\n        imdb_rating: '9.0',\n        your_rating: true,\n        action: ''\n      }, {\n        rank: 4,\n        title: 'The Dark Knight',\n        imdb_rating: '9.0',\n        your_rating: false,\n        action: ''\n      }, {\n        rank: 5,\n        title: '12 Angry Men',\n        imdb_rating: '8.9',\n        your_rating: false,\n        action: ''\n      }]\n    };\n\n    this.handleToggleRating = movieRank => {\n      const movies = [...this.state.movies];\n      const movie = movies.find(movie => movie.rank === movieRank);\n      movie.your_rating = !movie.your_rating;\n      this.setState({\n        movies\n      });\n    };\n  }\n\n  render() {\n    const columns = [{\n      label: 'Rank',\n      path: 'rank',\n      content: (movie, key) => /*#__PURE__*/_jsxDEV(\"td\", {\n        children: movie[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 35\n      }, this)\n    }, {\n      label: 'Title',\n      path: 'title',\n      content: (movie, key) => /*#__PURE__*/_jsxDEV(\"td\", {\n        children: movie[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 34\n      }, this)\n    }, {\n      label: 'IMDB Rating',\n      path: 'imdb_rating',\n      content: (movie, key) => /*#__PURE__*/_jsxDEV(\"td\", {\n        children: movie[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 35\n      }, this)\n    }, {\n      label: 'Your Rating',\n      path: 'your_rating',\n      content: (movie, key) => /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(Rating, {\n          isRated: movie[key],\n          rank: movie.rank,\n          handleToggleRating: this.handleToggleRating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 35\n      }, this)\n    }, {\n      label: 'Action',\n      path: 'action',\n      content: (movie, key) => /*#__PURE__*/_jsxDEV(\"td\", {\n        children: movie[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 35\n      }, this)\n    }];\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        data: this.state.movies,\n        columns: columns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["F:/React/class-16/imdb/src/components/movies.component.js"],"names":["React","Component","Table","Rating","getMovies","Movies","state","movies","rank","title","imdb_rating","your_rating","action","handleToggleRating","movieRank","movie","find","setState","render","columns","label","path","content","key"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Table from \"./common/table.component\";\r\nimport Rating from \"./rating.component\";\r\nimport getMovies from \"../service/get-movies.service\";\r\n\r\nclass Movies extends React.Component {\r\n    state = {\r\n        movies: [\r\n            {rank: 1, title: 'The Shawshank Redemption', imdb_rating: '9.2', your_rating: true, action: ''},\r\n            {rank: 2, title: 'The Godfather', imdb_rating: '9.1', your_rating: false, action: ''},\r\n            {rank: 3, title: 'The Godfather: Part II', imdb_rating: '9.0', your_rating: true, action: ''},\r\n            {rank: 4, title: 'The Dark Knight', imdb_rating: '9.0', your_rating: false, action: ''},\r\n            {rank: 5, title: '12 Angry Men', imdb_rating: '8.9', your_rating: false, action: ''}\r\n        ]        \r\n    }\r\n\r\n    handleToggleRating = movieRank => {\r\n      const movies = [...this.state.movies];\r\n      const movie = movies.find(movie => movie.rank === movieRank)\r\n      movie.your_rating = !(movie.your_rating);\r\n      this.setState({ movies });\r\n    }\r\n\r\n  render() {\r\n    const columns = [\r\n        {\r\n          label: 'Rank', \r\n          path: 'rank', \r\n          content: (movie,key) => <td>{movie[key]}</td> \r\n        },\r\n        {\r\n          label: 'Title', \r\n          path: 'title', \r\n          content:(movie,key) => <td>{movie[key]}</td> \r\n        },\r\n        {\r\n          label: 'IMDB Rating', \r\n          path: 'imdb_rating', \r\n          content: (movie,key) => <td>{movie[key]}</td> \r\n        },\r\n        {\r\n          label: 'Your Rating', \r\n          path: 'your_rating', \r\n          content: (movie,key) => <td><Rating \r\n                                        isRated={movie[key]} \r\n                                        rank={movie.rank} \r\n                                        handleToggleRating={this.handleToggleRating}/>\r\n                                  </td> },\r\n        {\r\n          label: 'Action', \r\n          path: 'action', \r\n          content: (movie,key) => <td>{movie[key]}</td> \r\n        }\r\n    ]\r\n    return (\r\n      <>\r\n        <Table data={this.state.movies} columns={columns}/>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n"]},"metadata":{},"sourceType":"module"}